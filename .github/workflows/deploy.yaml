name: python-flask app deployment

on:
  push:
    branches: [ master ]

jobs:
  frontend:
    runs-on: self-hosted
    name: deploying frontend
    defaults:
      run:
        working-directory: 'frontend'
    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm ci
    - run: npm run build --if-present
    - name: Clear contents of /var/www/html/chatter
      run: sudo rm -rf /var/www/html/chatter/*
    - name: Copy dist folder to /var/www/html/chatter
      run: sudo cp -r dist/* /var/www/html/chatter
      
  backend:
    runs-on: ubuntu-latest
    name: deploying backend

    steps:
      - name: Checkout the files to github runner
        uses: actions/checkout@v2

      - name: Deploy backend
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          REMOTE_HOST: ${{ secrets.EC2_IP_ADDRESS }}
          REMOTE_USER: ${{ secrets.EC2_USERNAME }}
        run: | 
          echo "$SSH_PRIVATE_KEY" > private_key_ec2.pem && chmod 600 private_key_ec2.pem
          ssh -o StrictHostKeyChecking=no -i private_key_ec2.pem ${REMOTE_USER}@${REMOTE_HOST} '
          echo "Current directory: $(pwd)"
          echo "Listing home directory:"
          ls -la ~
          echo "Running .profile"
          source ~/.profile
          echo "Killing existing applciation process"
          #exec pkill -f /home/ubuntu/actions-runner-chat-app/_work/chat-app-flask-react/chat-app-flask-react/backend/venv/bin/python3
          cd /home/ubuntu/actions-runner-chat-app/_work/chat-app-flask-react/chat-app-flask-react/backend
          echo "Running application profile venv"
          python3 -m venv venv
          source venv/bin/activate
          echo "Installing applciation requirements"
          pip install -r requirements.txt
          echo "Running application process"
          nohup python3 -m src > log.txt 2>&1 &
          '
